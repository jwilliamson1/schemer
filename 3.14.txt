(define (mystery x)
  (define (loop ('a 'b 'c 'd) y)
    (if (null? ('a 'b 'c 'd))
        y
        (let ((temp (cdr ('a 'b 'c 'd)))) -- ('b 'c 'd)
          (set-cdr! ('a 'b 'c 'd) '()) -- ('a '())
          (loop ('b 'c 'd) ('a '())))))
  (loop 'a b c d '()))

(define (loop ('b 'c 'd) ('a '()))
    (if (null? ('b 'c 'd))
        ('a '())
        (let ((temp (cdr ('b 'c 'd)))) -- ('c 'd)
          (set-cdr! ('b 'c 'd)  ('a '())) -- ('b 'a '())
          (loop ('c 'd) ('b 'a '())))))

(define (loop ('c 'd) ('b 'a '()))
    (if (null? ('c 'd))
        ('b 'a '())
        (let ((temp (cdr ('c 'd)))) -- ('d)
          (set-cdr! ('c 'd)  ('b 'a '())) -- ('c 'b 'a '())
          (loop ('d) ('c 'b 'a '())))))

(define (loop ('d) ('c 'b 'a '()))
    (if (null? ('d))
        ('c 'b 'a '())
        (let ((temp (cdr ('d)))) -- ('())
          (set-cdr! ('d)  ('c 'b 'a '())) -- ('d 'c 'b 'a '())
          (loop ('()) ('d 'c 'b 'a '())))))

(define (loop ('()) ('d 'c 'b 'a '()))
    (if (null? '())
        ('d 'c 'b 'a '())
        (let ((temp (cdr ('d)))) -- ('())
          (set-cdr! ('d)  ('c 'b 'a '())) -- ('d 'c 'b 'a '())
          (loop ('()) ('d 'c 'b 'a '())))))