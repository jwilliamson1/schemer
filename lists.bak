;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-advanced-reader.ss" "lang")((modname lists) (read-case-sensitive #t) (teachpacks ((lib "draw.rkt" "teachpack" "htdp"))) (htdp-settings #(#t constructor repeating-decimal #t #t none #f ((lib "draw.rkt" "teachpack" "htdp")) #f)))
;; add-up-3 : list-of-3-numbers  ->  number
;; to add up the three numbers in a-list-of-3-numbers
;; examples and tests: 
;;   (= (add-up-3 (cons 2 (cons 1 (cons 3 empty)))) 6)
;;   (= (add-up-3 (cons 0 (cons 1 (cons 0 empty)))) 1)
(define (add-up-3 a-list-of-3-numbers) 
  (+(first a-list-of-3-numbers)
    (first (rest a-list-of-3-numbers))
    (first (rest (rest a-list-of-3-numbers)))))

  (add-up-3 (cons 2 (cons 1 (cons 3 empty))))
  (add-up-3 (cons 2 (cons 1 (cons 3 empty))))

(define (two-symbols s1 s2)
  (cons s1(cons s2 empty)))

(two-symbols 's1 's2)

(define example-doll1 (two-symbols 'doll 'puma))
(define example-doll2 (two-symbols 'pancreas 'doll))
(define example-doll3 (two-symbols 'nope 'nada))

(define (contains-2-doll? l)
  (or(eq? (first l) 'doll)
     (eq? (first (rest l)) 'doll)))

(contains-2-doll? example-doll1)
(contains-2-doll? example-doll2)
(contains-2-doll? example-doll3)