#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 129 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 192 192 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 192 192 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 69 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 31
31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 30 3
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 0 31
31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 30 3
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 30 70 190 0
31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 135 185
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 176 208 208
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 135 185 0
31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 30 70 190 30
3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 143 15 223 0
31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 30
3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 141 19 5 30
3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 143 15 223
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 244 194 71 0
31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 244 194 71
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 127
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 86 86 86 30
3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 127
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 86 86 86 0
31 31 -1 -1 69 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 69 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 86 86 86 0
31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 86 86 86 30
3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 116 116 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 116 116 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 141 19 5 0
31 31 -1 -1           0 1732 0 30 3 12 #"#lang racket"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"miller-rabin"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 17 #"miller-rabin-test"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"miller-rabin-test"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #") "
0 0 14 3 4 #"true"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 36 #"; expmod is congruent to 1 modulo n "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 23 3 1 #"1"
0 0 26 3 3 #") ("
0 0 14 3 17 #"miller-rabin-test"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 26 3 1 #" "
0 0 14 3 5 #"false"
0 0 26 3 4 #"))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 26 3 1 #" "
0 0 14 3 4 #"base"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #") "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 5 #"even?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 26 3 1 #" "
0 0 14 3 4 #"base"
0 0 26 3 2 #" ("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 2 #") "
0 0 14 3 1 #"m"
0 0 26 3 4 #"))) "
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 17 #"non-trivial-sqrt?"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 2 #") "
0 0 23 3 1 #"0"
0 0 26 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 1 #"m"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 9 #"remainder"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 4 #"base"
0 0 26 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 26 3 1 #" "
0 0 14 3 4 #"base"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 14 3 1 #"m"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                     "
0 0 14 3 1 #"m"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"non-trivial-sqrt?"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 14 3 5 #"false"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 3 #")) "
0 0 14 3 5 #"false"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 50 #"; book reads: whose square is equal to 1 modulo n "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 60
#"; however, what was meant is square is congruent 1 modulo n "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 14 3 1 #"m"
0 0 26 3 2 #") "
0 0 23 3 1 #"1"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 3 #"nil"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 4 #"()) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 26 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 2 #") "
0 0 14 3 3 #"nil"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 9 #"predicate"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 3 #")  "
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 14 3 6 #"filter"
0 0 26 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 26 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 6 #"))))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"accumulate"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 7 #"initial"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"       "
0 0 14 3 7 #"initial"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 2 #"op"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 12 #"           ("
0 0 14 3 10 #"accumulate"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 7 #"initial"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 16 3 8 #"sequence"
0 0 26 3 6 #"))))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 1 #" "
0 0 14 3 4 #"high"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 1 #">"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 1 #" "
0 0 14 3 4 #"high"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"       "
0 0 14 3 3 #"nil"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 2 #" ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #") "
0 0 14 3 4 #"high"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"flatmap"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 3 #"seq"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 10 #"accumulate"
0 0 26 3 1 #" "
0 0 14 3 6 #"append"
0 0 26 3 1 #" "
0 0 14 3 3 #"nil"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 3 #"seq"
0 0 26 3 4 #"))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 1 #" "
0 0 18 3 45 #";; Here's the unique-pairs from the chapter: "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"unique-pairs"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 7 #"flatmap"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"i"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"j"
0 0 26 3 3 #") ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 1 #" "
0 0 14 3 1 #"j"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 20 #"                   ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 4 #"))) "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 1 #" "
0 0 18 3 60
#";; We need to make triples (i j k).  The following will do: "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 14 #"unique-triples"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 7 #"flatmap"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"i"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 7 #"flatmap"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"j"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 26 #"                         ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"k"
0 0 26 3 3 #") ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 1 #" "
0 0 14 3 1 #"j"
0 0 26 3 1 #" "
0 0 14 3 1 #"k"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 31 #"                              ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"j"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 5 #")))) "
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         127 23           0 0           0 20 0 26 3 1 #"("
0 0 14 3 3 #"car"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 6 #"filter"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"       "
0 0 14 3 12 #"miller-rabin"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 18 #"enumerate-interval"
0 0 26 3 1 #" "
0 0 23 3 5 #"10000"
0 0 26 3 1 #" "
0 0 23 3 7 #"1000000"
0 0 26 3 4 #"))))"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 16 #"the-empty-stream"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 3 #"())"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"stream-null?"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"memo-proc"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 12 #"already-run?"
0 0 26 3 1 #" "
0 0 14 3 5 #"false"
0 0 26 3 3 #") ("
0 0 14 3 6 #"result"
0 0 26 3 1 #" "
0 0 14 3 5 #"false"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 3 #" ()"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"not"
0 0 26 3 1 #" "
0 0 14 3 12 #"already-run?"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 16 3 5 #"begin"
0 0 26 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 26 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 14 3 4 #"set!"
0 0 26 3 1 #" "
0 0 14 3 12 #"already-run?"
0 0 26 3 1 #" "
0 0 14 3 4 #"true"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                 "
0 0 14 3 6 #"result"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"          "
0 0 14 3 6 #"result"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 13 #"define-syntax"
0 0 26 3 1 #" "
0 0 14 3 6 #"s-cons"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 12 #"syntax-rules"
0 0 26 3 3 #" ()"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"    (("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 4 #"tail"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 16 3 5 #"delay"
0 0 26 3 1 #" "
0 0 14 3 4 #"tail"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 5 #"force"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"s-ref"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 3 #") ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 25 #"stream-enumerate-interval"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 1 #" "
0 0 14 3 4 #"high"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 1 #">"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 1 #" "
0 0 14 3 4 #"high"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 16 #"the-empty-stream"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 6 #"s-cons"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"       "
0 0 14 3 3 #"low"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 25 #"stream-enumerate-interval"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 3 #"low"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                  "
0 0 14 3 4 #"high"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"stream-filter"
0 0 26 3 1 #" "
0 0 14 3 4 #"pred"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 12 #"stream-null?"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 16 #"the-empty-stream"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 4 #"pred"
0 0 26 3 2 #" ("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 13 #"stream-filter"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 14 3 4 #"pred"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"           ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 14 3 13 #"stream-filter"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 15 #"               "
0 0 14 3 4 #"pred"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 15 #"stream-for-each"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 12 #"stream-null?"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 5 #"begin"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 15 #"stream-for-each"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 26 #"                         ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 14 #"display-stream"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 15 #"stream-for-each"
0 0 26 3 1 #" "
0 0 14 3 12 #"display-line"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"display-line"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         139 23           0 0           0 22 0 26 3 1 #"("
0 0 14 3 5 #"s-car"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-cdr"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"stream-filter"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 14 3 12 #"miller-rabin"
0 0 26 3 2 #" ("
0 0 14 3 25 #"stream-enumerate-interval"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 23 3 5 #"10000"
0 0 26 3 1 #" "
0 0 23 3 7 #"1000000"
0 0 26 3 4 #"))))"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"show"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 12 #"display-line"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"stream-map"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 30 3 1 #"."
0 0 26 3 1 #" "
0 0 14 3 10 #"argstreams"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 12 #"stream-null?"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 10 #"argstreams"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 16 #"the-empty-stream"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 6 #"s-cons"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 5 #"apply"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 10 #"argstreams"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 5 #"apply"
0 0 26 3 1 #" "
0 0 14 3 10 #"stream-map"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 4 #"tail"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                         "
0 0 14 3 10 #"argstreams"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-add"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s2"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 10 #"stream-map"
0 0 26 3 1 #" "
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 4 #"ones"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ones"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 8 #"integers"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-add"
0 0 26 3 1 #" "
0 0 14 3 8 #"integers"
0 0 26 3 1 #" "
0 0 14 3 4 #"ones"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-add"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-mul"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s2"
0 0 26 3 3 #") ("
0 0 14 3 10 #"stream-map"
0 0 26 3 1 #" "
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-mul"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 18 3 26 #";2. promise     1. promise"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 5 #"s-mul"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 8 #"integers"
0 0 26 3 2 #") "
0 0 14 3 9 #"factorial"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 18 3 25 #";3.promise      2.promise"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 18 3 25 #";4.promise      6.promise"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 11 #"\"factorial\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 26 3 1 #" "
0 0 23 3 1 #"4"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 18 3 12 #";1 3 6 10 15"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"partial-sums"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 6 #"s-cons"
0 0 26 3 2 #" ("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 2 #")("
0 0 14 3 5 #"s-add"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 3 #") ("
0 0 14 3 12 #"partial-sums"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 2 #" ("
0 0 14 3 12 #"partial-sums"
0 0 26 3 1 #" "
0 0 14 3 8 #"integers"
0 0 26 3 2 #") "
0 0 23 3 1 #"4"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"scale-stream"
0 0 26 3 1 #" "
0 0 14 3 6 #"stream"
0 0 26 3 1 #" "
0 0 14 3 6 #"factor"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 10 #"stream-map"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 6 #"factor"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 14 3 6 #"stream"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 2 #" ("
0 0 14 3 12 #"scale-stream"
0 0 26 3 1 #" "
0 0 14 3 8 #"integers"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 2 #") "
0 0 23 3 1 #"3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"expand"
0 0 26 3 1 #" "
0 0 14 3 3 #"num"
0 0 26 3 1 #" "
0 0 14 3 3 #"den"
0 0 26 3 1 #" "
0 0 14 3 5 #"radix"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 6 #"s-cons"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 8 #"quotient"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 3 #"num"
0 0 26 3 1 #" "
0 0 14 3 5 #"radix"
0 0 26 3 2 #") "
0 0 14 3 3 #"den"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 6 #"expand"
0 0 26 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 3 #"num"
0 0 26 3 1 #" "
0 0 14 3 5 #"radix"
0 0 26 3 2 #") "
0 0 14 3 3 #"den"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 14 3 3 #"den"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 14 3 5 #"radix"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 18 3 29 #"; num 1 den 7 radix 10 1.3..."
0 0 26 29 1 #"\n"
0 0 18 3 27 #"; num 3 den 8 radix 10 3.75"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"as"
0 0 26 3 1 #" "
0 0 14 3 4 #"ones"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 4 #"twos"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 1 #" "
0 0 14 3 4 #"twos"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"divide-one"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #")("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"raise"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 3 #") ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 1 #"^"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"integrate-series"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 10 #"stream-map"
0 0 26 3 1 #" "
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 10 #"stream-map"
0 0 26 3 1 #" "
0 0 14 3 10 #"divide-one"
0 0 26 3 1 #" "
0 0 14 3 8 #"integers"
0 0 26 3 2 #") "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 18 #"\"integrate-series\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 2 #" ("
0 0 14 3 16 #"integrate-series"
0 0 26 3 1 #" "
0 0 14 3 2 #"as"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #"("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #"("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"i"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 23 3 1 #"1"
0 0 26 3 2 #" ("
0 0 14 3 16 #"integrate-series"
0 0 26 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 12 #"\"exp-series\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 5 #"s-ref"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 16 #"integrate-series"
0 0 26 3 1 #" "
0 0 14 3 6 #"cosine"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 6 #"cosine"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 16 #"integrate-series"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 13 #"sine-explicit"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #" ("
0 0 14 3 6 #"s-cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 1 #" "
0 0 14 3 13 #"sine-explicit"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 6 #"\"sine\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"head"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 26 3 1 #" "
0 0 14 3 4 #"sine"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0           0
