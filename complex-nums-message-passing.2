#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 427 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #")("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 25 3 2 #") "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 4 #"sqrt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 25 3 3 #") ("
0 0 14 3 4 #"atan"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Unknown op: "
0 0 19 29 1 #"\n"
0 0 19 3 32 #"            MAKE-FROM-REAL-IMAG\""
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 8 #"dispatch"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 25 3 2 #") "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 25 3 2 #") "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cos"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sin"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 31 #"\"Unknown op: MAKE-FROM-MAG-ANG\""
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 8 #"dispatch"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 21 #"\"make from real imag\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"make from mag ang\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #" ("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";explicit dispatch"
0 0 25 29 1 #"\n"
0 0 17 3 197
(
 #";the problem with explicit dispatch is that each system must know ho"
 #"w to convert to another systems type and as new object are added eac"
 #"h existing selector has to be updated to support the new type"
) 0 0 25 29 1 #"\n"
0 0 17 3 144
(
 #";and the new type needs to be updated to support all the existing ty"
 #"pes; conversion can be costly vs just looking up the correct proc in"
 #" a table"
) 0 0 25 29 1 #"\n"
0 0 17 3 104
(
 #";further this requires selectors to be updated to check for every ty"
 #"pe and dispatch the correct selector"
) 0 0 25 29 1 #"\n"
0 0 17 3 84
(
 #";this seems to introduce unnessary work when compared with data-dire"
 #"cted programming"
) 0 0 25 29 1 #"\n"
0 0 17 3 44 #";not additive so name collisions could occur"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";DATA DIRECTED PROGRAMMING"
0 0 25 29 1 #"\n"
0 0 17 3 187
(
 #";this method prefers systems where new functions are being added sin"
 #"ce once a generic interface is developed to the primitives of the do"
 #"main newer functionality can be more easily applied"
) 0 0 25 29 1 #"\n"
0 0 17 3 162
(
 #";this requires generally only adding a new proc and adding to the in"
 #"stall table for each object, and then providing access to that table"
 #" function once externally."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";MESSAGE PASSING"
0 0 25 29 1 #"\n"
0 0 17 3 136
(
 #";The advantage of message passing in a large system comes when you h"
 #"ave many types with a similar interface, but different functionality"
) 0 0 25 29 1 #"\n"
0           0
