#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 108 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 128 128 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 128 128 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 255 0 0 0 -1
-1 2 36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 255 0 0 0 -1
-1 2 16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 88 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1           0 4559 0 30 3 12 #"#lang scheme"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 11 #"*the-table*"
0 0 26 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 26 3 2 #"))"
0 0 18 3 15 #";make THE table"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 16 #"*coercion-table*"
0 0 26 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 26 3 2 #"))"
0 0 18 3 16 #";make THE table "
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 3 #") ("
0 0 14 3 9 #"hash-set!"
0 0 26 3 1 #" "
0 0 14 3 11 #"*the-table*"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 2 #") "
0 0 14 3 5 #"value"
0 0 26 3 2 #"))"
0 0 18 3 5 #";put "
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 3 #") ("
0 0 14 3 8 #"hash-ref"
0 0 26 3 1 #" "
0 0 14 3 11 #"*the-table*"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 2 #") "
0 0 23 3 2 #"#f"
0 0 26 3 2 #"))"
0 0 18 3 4 #";get"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 3 #") ("
0 0 14 3 9 #"hash-set!"
0 0 26 3 1 #" "
0 0 14 3 16 #"*coercion-table*"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 2 #") "
0 0 14 3 5 #"value"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"get-coercion"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 3 #") ("
0 0 14 3 8 #"hash-ref"
0 0 26 3 1 #" "
0 0 14 3 16 #"*coercion-table*"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 4 #"key1"
0 0 26 3 1 #" "
0 0 14 3 4 #"key2"
0 0 26 3 2 #") "
0 0 23 3 2 #"#f"
0 0 26 3 2 #"))"
0 0 18 3 4 #";get"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 8 #"contents"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 5 #"real?"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 5 #"pair?"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #")("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 19 #"\"Bad tagged datum: "
0 0 20 29 1 #"\n"
0 0 20 3 23 #"              TYPE-TAG\""
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #") "
0 0 14 3 5 #"datum"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 5 #"real?"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #") "
0 0 14 3 5 #"datum"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 5 #"pair?"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 26 3 1 #"("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 19 #"\"Bad tagged datum: "
0 0 20 29 1 #"\n"
0 0 20 3 23 #"              CONTENTS\""
0 0 26 3 1 #" "
0 0 14 3 5 #"datum"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 30 3 1 #"."
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"no-method"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 20 3 27 #"\"No method for these types\""
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 5 #"apply"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 6 #"length"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #") "
0 0 23 3 1 #"2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 5 #"type1"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 14 3 5 #"type2"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 14 3 2 #"a1"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 14 3 2 #"a2"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 14 3 5 #"type1"
0 0 26 3 1 #" "
0 0 14 3 5 #"type2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 14 3 9 #"no-method"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 6 #"t1->t2"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 14 3 12 #"get-coercion"
0 0 26 3 1 #" "
0 0 14 3 5 #"type1"
0 0 26 29 1 #"\n"
0 0 26 3 41 #"                                         "
0 0 14 3 5 #"type2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                          ("
0 0 14 3 6 #"t2->t1"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 14 3 12 #"get-coercion"
0 0 26 3 1 #" "
0 0 14 3 5 #"type2"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 41 #"                                         "
0 0 14 3 5 #"type1"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 16 3 4 #"cond"
0 0 26 3 2 #" ("
0 0 14 3 6 #"t1->t2"
0 0 26 29 1 #"\n"
0 0 26 3 30 #"                             ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 30 #"                              "
0 0 14 3 2 #"op"
0 0 26 3 2 #" ("
0 0 14 3 6 #"t1->t2"
0 0 26 3 1 #" "
0 0 14 3 2 #"a1"
0 0 26 3 2 #") "
0 0 14 3 2 #"a2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 14 3 6 #"t2->t1"
0 0 26 29 1 #"\n"
0 0 26 3 30 #"                             ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 30 #"                              "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 2 #"a1"
0 0 26 3 2 #" ("
0 0 14 3 6 #"t2->t1"
0 0 26 3 1 #" "
0 0 14 3 2 #"a2"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 14 3 4 #"else"
0 0 26 29 1 #"\n"
0 0 26 3 30 #"                             ("
0 0 14 3 9 #"no-method"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 9 #"no-method"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"sub"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"mul"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"div"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"div"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 17 #";; scheme numbers"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 29 #"install-scheme-number-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"scheme->rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"div"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"make"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #")  ("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"       "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 16 #"scheme->rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 29 #"install-scheme-number-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"make"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 2 #")("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 2 #")("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 26 #"\"=zero? should be false: \""
0 0 26 3 2 #" )"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"4"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 25 #"\"=zero? should be true: \""
0 0 26 3 2 #" )"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 19 #";; rational package"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 24 #"install-rational-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 22 #";; internal procedures"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"make-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 1 #"g"
0 0 26 3 2 #" ("
0 0 14 3 3 #"gcd"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"g"
0 0 26 3 3 #") ("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 1 #" "
0 0 14 3 1 #"g"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"add-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 8 #"make-rat"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"sub-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 8 #"make-rat"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"mul-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 8 #"make-rat"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"div-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 8 #"make-rat"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"equ?-rat"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #" "
0 0 14 3 2 #"r2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 2 #")("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 2 #"r2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 2 #")("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 2 #"r2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"=zero?-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 2 #") "
0 0 23 3 1 #"0"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 14 #"rational->real"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 26 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 2 #")("
0 0 14 3 5 #"denom"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 34 #";; interface to rest of the system"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 7 #"add-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 7 #"sub-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 7 #"mul-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"div"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 7 #"div-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"make"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 8 #"make-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 8 #"equ?-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 10 #"=zero?-rat"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 14 #"rational->real"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 24 #"install-rational-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"make"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"d"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 2 #" ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 1 #" "
0 0 23 3 1 #"4"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"r2"
0 0 26 3 2 #" ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 23 3 2 #"75"
0 0 26 3 1 #" "
0 0 23 3 3 #"100"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"r3"
0 0 26 3 2 #" ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 16 #"\"should be true\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #" "
0 0 14 3 2 #"r2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 17 #"\"should be false\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #" "
0 0 14 3 2 #"r3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"r4"
0 0 26 3 2 #" ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 28 #"\"=zero? r4 should be true: \""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 14 3 2 #"r4"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 29 #"\"=zero? r3 should be false: \""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 14 3 2 #"r3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 20 #"install-real-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"real->complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 27 #"make-complex-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"div"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"make"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"real"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #")  ("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 1 #"="
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #" "
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"       "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"real"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"r"
0 0 26 3 3 #") ("
0 0 14 3 13 #"real->complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 20 #"install-real-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"make-real"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"make"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"real"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 27 #"install-rectangular-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 22 #";; internal procedures"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #")("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"sqrt"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 14 3 6 #"square"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"atan"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cos"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 2 #" ("
0 0 14 3 3 #"sin"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 2 #")("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 2 #")("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 38 #";; interface to the rest of the system"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 11 #"rectangular"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 11 #"rectangular"
0 0 26 3 2 #") "
0 0 14 3 9 #"real-part"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 11 #"rectangular"
0 0 26 3 2 #") "
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 11 #"rectangular"
0 0 26 3 2 #") "
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 11 #"rectangular"
0 0 26 3 2 #") "
0 0 14 3 5 #"angle"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 11 #"rectangular"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 11 #"rectangular"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 11 #"rectangular"
0 0 26 3 2 #") "
0 0 14 3 4 #"equ?"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 27 #"install-rectangular-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 21 #"install-polar-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 22 #";; internal procedures"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #")("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cos"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 3 #"sin"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 6 #"square"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 4 #"atan"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 2 #")("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 2 #")("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 38 #";; interface to the rest of the system"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"polar"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 14 3 9 #"real-part"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 14 3 5 #"angle"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"polar"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"polar"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 5 #"polar"
0 0 26 3 1 #" "
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 14 3 4 #"equ?"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"install-polar-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"equ?-polar"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 5 #"polar"
0 0 26 3 1 #" "
0 0 14 3 5 #"polar"
0 0 26 3 3 #")) "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"p3"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"5"
0 0 26 3 1 #" "
0 0 23 3 1 #"4"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 16 #"\"Should be true\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 26 3 1 #" "
0 0 20 3 17 #"\"Should be false\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 1 #" "
0 0 14 3 2 #"p3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 23 #"install-complex-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 40 #";; imported procedures from rectangular "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 21 #";; and polar packages"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"    (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"          "
0 0 23 3 1 #"'"
0 0 14 3 11 #"rectangular"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"    (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"polar"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 22 #";; internal procedures"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 14 #"=zero?-complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #")("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"equ?-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 2 #")("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 2 #")("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"add-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"sub-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 26 3 2 #" ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 26 3 2 #" ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"mul-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"div-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"/"
0 0 26 3 2 #" ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 26 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 3 #") ("
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 34 #";; interface to rest of the system"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #") ("
0 0 14 3 10 #"attach-tag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 14 #"=zero?-complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 7 #"complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 12 #"equ?-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 7 #"complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 18 #";re-tag as complex"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 11 #"add-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 7 #"complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 11 #"sub-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 7 #"complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 11 #"mul-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"div"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 7 #"complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 11 #"div-complex"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"tag"
0 0 26 3 2 #" ("
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 2 #") "
0 0 14 3 9 #"real-part"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 2 #") "
0 0 14 3 9 #"imag-part"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 2 #") "
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"angle"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 2 #") "
0 0 14 3 5 #"angle"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"done"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 23 #"install-complex-package"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 27 #"make-complex-from-real-imag"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 19 #"make-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 3 2 #") "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 25 #"make-complex-from-mag-ang"
0 0 26 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 17 #"make-from-mag-ang"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 3 2 #") "
0 0 14 3 1 #"r"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 2 #" ("
0 0 14 3 25 #"make-complex-from-mag-ang"
0 0 26 3 2 #"  "
0 0 23 3 2 #"10"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 2 #" ("
0 0 14 3 27 #"make-complex-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"3"
0 0 26 3 1 #" "
0 0 23 3 1 #"4"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"z3"
0 0 26 3 2 #" ("
0 0 14 3 25 #"make-complex-from-mag-ang"
0 0 26 3 2 #"  "
0 0 23 3 2 #"10"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 2 #"  "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 26 3 2 #"  "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"div"
0 0 26 3 2 #"  "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 26 3 2 #"  "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"magnitude"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"real-part"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 23 3 1 #"2"
0 0 26 3 1 #" "
0 0 23 3 1 #"7"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z3"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 113
(
 #";2.77 apply generic is called once which looks up magnitude with typ"
 #"e complex which returns the maginude function"
) 0 0 26 29 1 #"\n"
0 0 18 3 124
(
 #";which is setup with apply generic which looks up the type polar or "
 #"rectangular and applies th respective magnitude function"
) 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"z0"
0 0 26 3 2 #" ("
0 0 14 3 27 #"make-complex-from-real-imag"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 13 #"apply-generic"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 26 3 1 #" "
0 0 14 3 2 #"z0"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 22 #"scheme-number->complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 27 #"make-complex-from-real-imag"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 23 3 1 #"0"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 22 #"scheme-number->complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 17 #"rational->complex"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 27 #"make-complex-from-real-imag"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 1 #"/"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 3 #")) "
0 0 23 3 1 #"0"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"scheme->rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 13 #"make-rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"s2"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"4"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 16 #"scheme->rational"
0 0 26 3 1 #" "
0 0 14 3 2 #"s2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 16 #"scheme->rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 17 #"rational->complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 28 #"scheme-number->scheme-number"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 18 3 29 #";don't need these! just check"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 18 #"rational->rational"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"complex->complex"
0 0 26 3 1 #" "
0 0 14 3 1 #"z"
0 0 26 3 2 #") "
0 0 14 3 1 #"z"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         301 23           0 0           0 49 0 26 3 1 #"("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 28 #"scheme-number->scheme-number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 18 #"rational->rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"put-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 16 #"complex->complex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 14 3 7 #"shouldn"
0 0 23 3 1 #"'"
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"need"
0 0 26 3 1 #" "
0 0 14 3 6 #"these!"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9        2161 23           0 0           0 359 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"apply-gen"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 30 3 1 #"."
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 15 #"coerce-all-args"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 21 #"coerce-to-single-type"
0 0 26 3 1 #" "
0 0 14 3 3 #"arg"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 4 #"type"
0 0 26 3 2 #" ("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 3 #"arg"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"           ("
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 3 #") ("
0 0 14 3 7 #"reverse"
0 0 26 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 14 3 4 #"type"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 21 #"coerce-to-single-type"
0 0 26 3 1 #" "
0 0 14 3 3 #"arg"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 2 #")("
0 0 14 3 4 #"cons"
0 0 26 3 1 #"("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 2 #") "
0 0 14 3 6 #"result"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"get-coercion"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #") "
0 0 14 3 4 #"type"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 14 3 21 #"coerce-to-single-type"
0 0 26 3 1 #" "
0 0 14 3 3 #"arg"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 2 #")("
0 0 14 3 4 #"cons"
0 0 26 3 1 #"("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #"("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 8 #"all-args"
0 0 26 3 4 #"))) "
0 0 14 3 6 #"result"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"                "
0 0 23 3 2 #"#f"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"apply-to-all"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"iter"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 9 #")        "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #") "
0 0 14 3 6 #"result"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 5 #"value"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 4 #"iter"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #")("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                  "
0 0 14 3 5 #"value"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                  ("
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"iter"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 4 #"()))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"check-all"
0 0 26 3 1 #" "
0 0 14 3 14 #"remaining-args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 14 #"remaining-args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 39 #"\"no suitable coercion operations found\""
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 14 #"remaining-args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 12 #"coerced-args"
0 0 26 3 2 #" ("
0 0 14 3 21 #"coerce-to-single-type"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 14 #"remaining-args"
0 0 26 3 2 #") "
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 4 #"()))"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 14 3 8 #"arg-type"
0 0 26 3 2 #" ("
0 0 14 3 8 #"type-tag"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 14 #"remaining-args"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 12 #"coerced-args"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 14 3 12 #"apply-to-all"
0 0 26 3 1 #" "
0 0 14 3 12 #"coerced-args"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 8 #"arg-type"
0 0 26 3 1 #" "
0 0 14 3 8 #"arg-type"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 14 3 9 #"check-all"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 14 #"remaining-args"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 9 #"check-all"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 5 #"apply"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 15 #"coerce-all-args"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 5 #")))))"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 2 #"99"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 24 #";lst--my-nums->-type-tag"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 1 #" "
0 0 14 3 3 #"lst"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 17 #";type-tag -> bool"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 4 #"type"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 4 #"type"
0 0 26 3 3 #")) "
0 0 23 3 2 #"#f"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 23 3 2 #"#t"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 1 #";"
0 0 18 3 10 #"(display \""
0 0 18 3 6 #"should"
0 0 18 3 1 #" "
0 0 18 3 34 #"be true: \")(highest-type 'complex)"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 11 #";(display \""
0 0 18 3 6 #"should"
0 0 18 3 1 #" "
0 0 18 3 36 #"be false: \")(highest-type 'rational)"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 11 #";(display \""
0 0 18 3 48 #"should be false: \")(highest-type 'scheme-number)"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 25 #";my-num -> my-num -> bool"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 22 #"type-greater-or-equal?"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 2 #"t1"
0 0 26 3 2 #" ("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 2 #"t2"
0 0 26 3 2 #" ("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 23 3 2 #"#t"
0 0 26 3 2 #" ("
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 2 #"t1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 23 3 2 #"#t"
0 0 26 3 2 #" ("
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 2 #"t2"
0 0 26 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"            (("
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 2 #"t1"
0 0 26 3 1 #")"
0 0 23 3 2 #"#t"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"            (("
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 2 #"t2"
0 0 26 3 1 #")"
0 0 23 3 2 #"#f"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 14 3 22 #"type-greater-or-equal?"
0 0 26 3 3 #" (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"t1"
0 0 26 3 3 #"))("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 44 #"                                          (("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"t2"
0 0 26 3 3 #"))("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 26 3 7 #")))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 1 #";"
0 0 18 3 10 #"(display \""
0 0 18 3 6 #"should"
0 0 18 3 1 #" "
0 0 18 3 2 #"be"
0 0 18 3 39 #" false \")(type-greater-or-equal? s1 r1)"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 1 #";"
0 0 18 3 10 #"(display \""
0 0 18 3 6 #"should"
0 0 18 3 1 #" "
0 0 18 3 40 #"be true \")(type-greater-or-equal? r1 s1)"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 1 #";"
0 0 18 3 57
#"(display \"should be true \")(type-greater-or-equal? z1 r1)"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 1 #";"
0 0 18 3 10 #"(display \""
0 0 18 3 6 #"should"
0 0 18 3 3 #" be"
0 0 18 3 39 #" false \")(type-greater-or-equal? r1 z1)"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 26 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 26 3 2 #" ("
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 2 #")("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 29 1 #"\n"
0 0 26 3 31 #"                              ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 22 #"type-greater-or-equal?"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 2 #") "
0 0 14 3 1 #"n"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                  "
0 0 14 3 1 #"m"
0 0 26 3 4 #"))) "
0 0 23 3 1 #"'"
0 0 26 3 3 #"() "
0 0 14 3 3 #"lst"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 20 #";proc, vararg my-num"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"apply-gen"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 30 3 1 #"."
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 34 #";type-tag lst-my-num -> lst-my-num"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 21 #"coerce-to-single-type"
0 0 26 3 1 #" "
0 0 14 3 11 #"target-type"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 26 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"           ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 8 #"arg-type"
0 0 26 3 2 #" ("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 3 #"arg"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 14 3 11 #"target-type"
0 0 26 3 1 #" "
0 0 14 3 8 #"arg-type"
0 0 26 3 2 #") "
0 0 14 3 3 #"arg"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"get-coercion"
0 0 26 3 1 #" "
0 0 14 3 8 #"arg-type"
0 0 26 3 1 #" "
0 0 14 3 11 #"target-type"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 3 #"arg"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 30 #"\"no coercion exists for types\""
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 8 #"arg-type"
0 0 26 3 1 #" "
0 0 14 3 11 #"target-type"
0 0 26 3 7 #")))))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 27 #";proc lst-my-nums -> my-num"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"apply-to-all"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 5 #"foldl"
0 0 26 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 26 3 2 #" ("
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 5 #"value"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 2 #") "
0 0 14 3 1 #"a"
0 0 26 29 1 #"\n"
0 0 26 3 20 #"                   ("
0 0 14 3 2 #"op"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 3 #") ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 23 3 1 #"'"
0 0 26 3 2 #"()"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 9 #"type-tags"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 9 #"type-tags"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 5 #"apply"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 12 #"highest-type"
0 0 26 3 2 #" ("
0 0 14 3 21 #"highest-type-in-group"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 12 #"highest-type"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 12 #"coerced-args"
0 0 26 3 2 #" ("
0 0 14 3 21 #"coerce-to-single-type"
0 0 26 3 1 #" "
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 12 #"coerced-args"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 14 3 12 #"apply-to-all"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 12 #"highest-type"
0 0 26 3 1 #" "
0 0 14 3 12 #"highest-type"
0 0 26 3 3 #")) "
0 0 14 3 12 #"coerced-args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 27 #"\"something bad happened!: \""
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 2 #"op"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 2 #"No"
0 0 20 3 1 #" "
0 0 20 3 6 #"parent"
0 0 20 3 1 #" "
0 0 20 3 4 #"type"
0 0 20 3 1 #" "
0 0 20 3 6 #"exists"
0 0 20 3 1 #" "
0 0 20 3 11 #"for args: \""
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 7 #")))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 8 #"type-tag"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"get-coercion"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 13 #"scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"            "
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 8 #"comp-add"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 7 #"complex"
0 0 26 3 1 #" "
0 0 14 3 7 #"complex"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 3 #"put"
0 0 18 3 1 #" "
0 0 18 3 6 #"'raise"
0 0 26 29 1 #"\n"
0 0 18 3 8 #";       "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 14 #"scheme-number)"
0 0 26 29 1 #"\n"
0 0 18 3 8 #";       "
0 0 18 3 17 #"scheme->rational)"
0 0 26 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 3 #"put"
0 0 18 3 1 #" "
0 0 18 3 6 #"'raise"
0 0 26 29 1 #"\n"
0 0 18 3 8 #";       "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 9 #"rational)"
0 0 26 29 1 #"\n"
0 0 18 3 8 #";       "
0 0 18 3 18 #"rational->complex)"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 2 #"r1"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"apply-gen"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 2 #" ("
0 0 14 3 18 #"make-scheme-number"
0 0 26 3 1 #" "
0 0 23 3 1 #"6"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"apply-gen"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 18 3 22 #";-> proc(num->complex)"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"raise-rat"
0 0 26 3 2 #" ("
0 0 14 3 3 #"get"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"raise"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 8 #"rational"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"raise-rat"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"apply-gen"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"apply-gen"
0 0 26 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"add"
0 0 26 3 1 #" "
0 0 14 3 2 #"s1"
0 0 26 3 1 #" "
0 0 14 3 2 #"z1"
0 0 26 3 1 #" "
0 0 14 3 2 #"r1"
0 0 26 3 5 #")    "
0 0 26 29 1 #"\n"
0           0
